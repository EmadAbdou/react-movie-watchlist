{"version":3,"sources":["components/Header.jsx","context/AppReducer.jsx","context/GlobalState.jsx","components/MovieControls.jsx","components/WatchlistMovieCard.jsx","components/Watchlist.jsx","components/Watched.jsx","components/MovieCard.jsx","components/Add.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","AppReducer","state","action","type","watchlist","payload","filter","movie","id","watched","initialState","localStorage","getItem","JSON","parse","GlobalContext","createContext","GlobalProvider","props","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","addMovieToWatchlist","removeMovieFromWatchlist","addMovieToWatched","moveToWatchlist","removeFromWatched","children","MovieControls","useContext","onClick","WatchlistMovieCard","console","log","poster_path","src","alt","title","Watchlist","length","map","Watched","MovieCard","storedMovie","find","item","storedMovieWatched","addBtnDisabled","addToWatchedBtnDisabled","release_date","substring","disabled","Add","useState","query","setQuery","movies","setMovies","placeholder","onChange","e","preventDefault","target","axios","get","then","res","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02a103da.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <header>\r\n            <div className=\"container\">\r\n                <div className=\"inner-content\">\r\n                    <div className=\"brand\">\r\n                        <Link to=\"/\">Watchlist</Link>\r\n                    </div>\r\n                    <ul className=\"nav-links\">\r\n                        <li>\r\n                            <Link to=\"/\">Watch List</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/watched\">Watched</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/add\" className=\"btn\">+ ADD</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\n","const AppReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_MOVIE_TO_WATCHLIST':\r\n            return {\r\n                ...state,\r\n                watchlist: [action.payload, ...state.watchlist]\r\n            }\r\n        case 'REMOVE_MOVIE_FROM_WATCHLIST':\r\n            return {\r\n                ...state,\r\n                watchlist: state.watchlist.filter(movie => movie.id !== action.payload)\r\n            }\r\n        case 'ADD_MOVIE_TO_WATCHED':\r\n            return {\r\n                ...state,\r\n                watchlist: state.watchlist.filter(movie => movie.id !== action.payload.id),\r\n                watched: [action.payload, ...state.watched]\r\n            }\r\n        case 'MOVE_TO_WATCHLIST':\r\n            return {\r\n                ...state,\r\n                watched: state.watched.filter(movie => movie.id !== action.payload.id),\r\n                watchlist: [action.payload, ...state.watchlist]\r\n            }\r\n        case 'REMOVE_MOVIE_FROM_WATCHED':\r\n            return {\r\n                ...state,\r\n                watched: state.watched.filter(movie => movie.id !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default AppReducer","import React, { createContext, useReducer, useEffect } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n// Initial State\r\n\r\nconst initialState = {\r\n    watchlist: localStorage.getItem('watchlist') ? JSON.parse(localStorage.getItem('watchlist')) : [],\r\n    watched: localStorage.getItem('watched') ? JSON.parse(localStorage.getItem('watched')) : [],\r\n};\r\n\r\n// Create Context\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider Component\r\n\r\nexport const GlobalProvider = (props) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    useEffect(() => {\r\n       localStorage.setItem('watchlist', JSON.stringify(state.watchlist));\r\n       localStorage.setItem('watched', JSON.stringify(state.watched));\r\n    }, [state]);\r\n\r\n    // Actions\r\n\r\n    const addMovieToWatchlist = (movie) => {\r\n        dispatch({ type: 'ADD_MOVIE_TO_WATCHLIST', payload: movie })\r\n    };\r\n\r\n    const removeMovieFromWatchlist = (id) => {\r\n        dispatch({ type: 'REMOVE_MOVIE_FROM_WATCHLIST', payload: id })\r\n    };\r\n\r\n    const addMovieToWatched = (movie) => {\r\n        dispatch({ type: 'ADD_MOVIE_TO_WATCHED', payload: movie })\r\n    };\r\n\r\n    const moveToWatchlist = (movie) => {\r\n        dispatch({ type: 'MOVE_TO_WATCHLIST', payload: movie })\r\n    };\r\n\r\n    const removeFromWatched = (id) => {\r\n        dispatch({ type: 'REMOVE_MOVIE_FROM_WATCHED', payload: id })\r\n    };\r\n\r\n\r\n    return (\r\n        <GlobalContext.Provider\r\n            value={\r\n                {\r\n                    watchlist: state.watchlist,\r\n                    watched: state.watched,\r\n                    addMovieToWatchlist,\r\n                    removeMovieFromWatchlist,\r\n                    addMovieToWatched,\r\n                    moveToWatchlist,\r\n                    removeFromWatched\r\n                }}>\r\n            {props.children}\r\n        </GlobalContext.Provider>\r\n    );\r\n};","import React, {useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const MovieControls = ({ movie, type }) => {\r\n\r\n    const { removeMovieFromWatchlist, addMovieToWatched, moveToWatchlist, removeFromWatched } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <div className=\"inner-card-controls\">\r\n            { type === 'watchlist' && (\r\n                <>\r\n                    <button className=\"ctrl-btn\" onClick={() => addMovieToWatched(movie)}>\r\n                        <i className=\"fa-fw far fa-eye\"></i>\r\n                    </button>\r\n                    <button className=\"ctrl-btn\" onClick={() => removeMovieFromWatchlist(movie.id)}>\r\n                        <i className=\"fa-fw fa fa-times\"></i>\r\n                    </button>\r\n                </>\r\n            )}\r\n            { type === 'watched' && (\r\n                <>\r\n                    <button className=\"ctrl-btn\" onClick={() => moveToWatchlist(movie)}>\r\n                        <i className=\"fa-fw far fa-eye-slash\"></i>\r\n                    </button>\r\n                    <button className=\"ctrl-btn\" onClick={() => removeFromWatched(movie.id)}>\r\n                        <i className=\"fa-fw fa fa-times\"></i>\r\n                    </button>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react'\r\nimport { MovieControls } from './MovieControls';\r\n\r\nexport const WatchlistMovieCard = ({ movie, type }) => {\r\n    console.log(movie);\r\n    return (\r\n        <div className=\"movie-card\">\r\n            <div className=\"overlay\"></div>\r\n            { movie.poster_path ? (\r\n                <img src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\r\n                    alt={`${movie.title} Poster`} />\r\n            ) : (\r\n                    <div className=\"filler-poster\"></div>\r\n                )}\r\n            <MovieControls movie={movie} type={type} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { WatchlistMovieCard } from './WatchlistMovieCard';\r\n\r\nexport const Watchlist = () => {\r\n\r\n    const { watchlist } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <div className=\"movie-page\">\r\n            <div className=\"container\">\r\n                <div className=\"header\">\r\n                    <h1 className=\"heading\">My Watchlist</h1>\r\n                    \r\n                    <span className=\"count-pill\">\r\n                        { watchlist.length } { watchlist.length === 1 ? 'Movie' : 'Movies'}\r\n                    </span>\r\n                </div>\r\n                {watchlist.length > 0 ? (\r\n                    <div className=\"movie-grid\">\r\n                        {watchlist.map((movie) => (\r\n                            // <div className=\"item\" key={movie.id}>\r\n                            <WatchlistMovieCard movie={movie} type=\"watchlist\" />\r\n                            // </div>\r\n                        ))}\r\n                    </div>)\r\n                    :\r\n                    (\r\n                        <h2 className=\"no-movies\">No movies in your list, Add some!</h2>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { WatchlistMovieCard } from './WatchlistMovieCard';\r\n\r\nexport const Watched = () => {\r\n    const { watched } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <div className=\"movie-page\">\r\n            <div className=\"container\">\r\n                <div className=\"header\">\r\n                    <h1 className=\"heading\">Watched Movies</h1>\r\n                    <span className=\"count-pill\">\r\n                        { watched.length } { watched.length === 1 ? 'Movie' : 'Movies'}\r\n                    </span>\r\n                </div>\r\n                {watched.length > 0 ? (\r\n                    <div className=\"movie-grid\">\r\n                        {watched.map((movie) => (\r\n                            // <div className=\"item\" key={movie.id}>\r\n                            <WatchlistMovieCard movie={movie} type=\"watched\" />\r\n                            // </div>\r\n                        ))}\r\n                    </div>)\r\n                    :\r\n                    (\r\n                        <h2 className=\"no-movies\">No movies in your list, Add some!</h2>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const MovieCard = ({movie}) => {\r\n    const { addMovieToWatchlist, addMovieToWatched,  watchlist, watched } = useContext(GlobalContext);\r\n\r\n    let storedMovie = watchlist.find(item => item.id === movie.id);\r\n    let storedMovieWatched = watched.find(item => item.id === movie.id);\r\n    const addBtnDisabled = storedMovie ? true : storedMovieWatched ? true : false;\r\n    const addToWatchedBtnDisabled = storedMovieWatched ? true : false;\r\n\r\n    return (\r\n        <div className=\"result-card\">\r\n            <div className=\"poster-wrapper\">\r\n                { movie.poster_path ? (\r\n                    <img src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} \r\n                    alt={`${movie.title} Poster`}/>\r\n                ) : (\r\n                    <div className=\"filler-poster\"></div>\r\n                )}\r\n            </div>\r\n            <div className=\"info\">\r\n                <div className=\"header\">\r\n                    <h3 className=\"title\">{movie.title}</h3>\r\n                    <h4 className=\"release-date\">\r\n                        {movie.release_date ? movie.release_date.substring(0, 4): `-`}\r\n                    </h4>\r\n                </div>\r\n                <div className=\"controls\">\r\n                    <button className=\"btn\" disabled={addBtnDisabled} onClick={() => addMovieToWatchlist(movie)}>Add To Watchlist</button>\r\n                    <button className=\"btn\" disabled={addToWatchedBtnDisabled} onClick={() => addMovieToWatched(movie)}>Add To Watched</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { MovieCard } from './MovieCard';\r\n\r\nexport const Add = () => {\r\n\r\n    const [query, setQuery] = useState('');\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    const onChange = e => {\r\n        e.preventDefault();\r\n        setQuery(e.target.value);\r\n        axios.get(`https://api.themoviedb.org/3/search/movie?api_key=dc8d20428b627ceceff0ef641a994ae0&language=en-US&page=1&include_adult=false&query=${e.target.value}`)\r\n                    .then(res => {\r\n                        console.log(res);\r\n                        setMovies(res['data']['results']);\r\n                    })\r\n    }\r\n\r\n    return (\r\n       <div className=\"add-page\">\r\n           <div className=\"container\">\r\n               <div className=\"add-content\">\r\n                   <div className=\"input-wrapper\">\r\n                       <input \r\n                       type=\"text\"\r\n                       placeholder=\"Search for a movie\"\r\n                       value={query}\r\n                       onChange={onChange}\r\n                       />\r\n                   </div>\r\n                   { movies.length > 0 && (\r\n                       <ul className=\"results\">\r\n                           { movies.map((movie) => (\r\n                               <li key={movie.id}>\r\n                                   <MovieCard movie={movie} />\r\n                               </li>\r\n                           ))}\r\n                       </ul>\r\n                   )}\r\n               </div>\r\n           </div>\r\n       </div>\r\n    )\r\n}\r\n\r\n","import './App.css';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { Header } from './components/Header';\r\nimport { Watchlist } from './components/Watchlist';\r\nimport { Watched } from './components/Watched';\r\nimport { Add } from './components/Add';\r\nimport './lib/font-awesome/css/all.min.css';\r\nimport { GlobalProvider } from './context/GlobalState';\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalProvider>\r\n      <Router>\r\n        <Header />\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Watchlist />\r\n          </Route>\r\n          <Route path=\"/watched\">\r\n            <Watched />\r\n          </Route>\r\n          <Route path=\"/add\">\r\n            <Add />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </GlobalProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  < App />\r\n  </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}